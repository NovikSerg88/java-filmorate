DROP TABLE IF EXISTS rating_MPA CASCADE;
DROP TABLE IF EXISTS genres CASCADE;
DROP TABLE IF EXISTS films CASCADE;
DROP TABLE IF EXISTS film_genres CASCADE;
DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS status CASCADE;
DROP TABLE IF EXISTS friendship CASCADE;
DROP TABLE IF EXISTS likes CASCADE;

CREATE TABLE IF NOT EXISTS rating_MPA (
rating_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
rating_name varchar(8) NOT NULL
);

CREATE TABLE IF NOT EXISTS genres (
genre_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
genre_name varchar(64) NOT NULL
);

CREATE TABLE IF NOT EXISTS status (
status_code char PRIMARY KEY,
status_name varchar(64)
);

CREATE TABLE IF NOT EXISTS users (
user_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
login varchar(255) NOT NULL,
name varchar(255),
email varchar(255),
birthday date
);

CREATE TABLE IF NOT EXISTS films (
film_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
name varchar(255) NOT NULL,
description varchar(255),
release_date date,
duration integer,
rating_id integer REFERENCES rating_MPA (rating_id)
);

CREATE TABLE IF NOT EXISTS film_genres (
film_id integer REFERENCES films (film_id),
genre_id integer REFERENCES genres (genre_id)
);

CREATE TABLE IF NOT EXISTS friendship (
requester_id integer,
addressee_id integer,
status_code char REFERENCES status (status_code)
);

CREATE TABLE IF NOT EXISTS likes (
film_id integer REFERENCES films (film_id),
user_id integer REFERENCES users (user_id)
);

